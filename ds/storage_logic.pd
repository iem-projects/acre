#N canvas 247 52 678 659 10;
#X obj 175 510 msg_pbank;
#X msg 192 331 recall \$1;
#X obj 175 549 list split 1;
#X obj 175 572 t b s;
#X obj 37 335 r par_stored;
#X obj 52 313 s par_get;
#X obj 46 460 list prepend add 0;
#X msg 186 305 list add \$1;
#X obj 46 483 list trim;
#X text 27 43 messages for the loop (or domain) are stored here;
#X obj 175 598 list;
#X obj 66 270 symbol \$1;
#X obj 40 381 route bang;
#X text 55 360 filter empties;
#X text 30 130 store in slot;
#X obj 17 150 r \$1/program/store;
#X obj 181 192 r \$1/program/recall;
#X obj 236 271 i 0;
#X obj 181 215 route float bang;
#X text 292 157 recall from slot [nr];
#X text 266 274 use number for next store/load;
#X obj 65 200 i 0;
#X obj 17 173 route float bang;
#X obj 164 148 r \$1/program/nr;
#X obj 290 316 s \$1/program/nr;
#X text 288 335 for info \, no act;
#X text 274 137 program nr \, dont react;
#X obj 175 627 s;
#X msg 203 481 edit;
#X obj 50 292 list trim;
#X obj 52 405 list trim;
#X obj 49 435 route \$1;
#X obj 330 574 print save_\$1:;
#X text 188 533 send to first name as receiver;
#X text 23 28 args: <domain>;
#X text 24 64 receiver names are registered with par_register and domain
is used for retrieving in par_register \, so parameter name starts
with domain/;
#X obj 66 219 t b f f;
#X msg 216 407 clear \$1;
#X text 27 102 functions here can be called with <domain>/program/function
see below:;
#X obj 492 102 r \$1/program/nr;
#X obj 476 167 + 1;
#X obj 478 187 t b f;
#X obj 505 209 s \$1/program/nr;
#X obj 478 233 s \$1/program/recall;
#X msg 464 145 1;
#X obj 514 167 + 1;
#X msg 513 145 -1;
#X obj 460 79 r \$1/program/next;
#X obj 514 123 r \$1/program/prev;
#N canvas 779 62 450 300 file-interface 0;
#X obj 50 248 outlet;
#X obj 23 23 r \$1/program/save;
#X obj 271 51 r \$1/program/load;
#X obj 23 44 t a b;
#X msg 22 176 write \$1;
#X obj 23 66 route bang symbol;
#X obj 271 71 route bang symbol;
#X msg 271 143 read \$1;
#X obj 23 140 symbol ../presets/default.txt;
#X text 149 24 save to file <symbol> or resave;
#X text 398 52 load from file <symbol> or reload;
#X obj 270 101 symbol ../../data\$1.txt;
#X connect 1 0 3 0;
#X connect 2 0 6 0;
#X connect 3 0 5 0;
#X connect 4 0 0 0;
#X connect 5 0 8 0;
#X connect 5 1 8 0;
#X connect 6 0 11 0;
#X connect 6 1 11 0;
#X connect 7 0 0 0;
#X connect 8 0 4 0;
#X connect 11 0 7 0;
#X connect 11 0 8 1;
#X restore 260 482 pd file-interface;
#X text 356 21 (c) GPL \, acre winfried ritsch;
#X connect 0 0 2 0;
#X connect 1 0 0 0;
#X connect 2 0 3 0;
#X connect 2 1 10 1;
#X connect 3 0 10 0;
#X connect 3 1 27 1;
#X connect 4 0 12 0;
#X connect 6 0 8 0;
#X connect 7 0 6 1;
#X connect 8 0 0 0;
#X connect 10 0 27 0;
#X connect 11 0 29 0;
#X connect 12 1 30 0;
#X connect 15 0 22 0;
#X connect 16 0 18 0;
#X connect 17 0 1 0;
#X connect 17 0 24 0;
#X connect 18 0 7 0;
#X connect 18 0 17 0;
#X connect 18 1 17 0;
#X connect 21 0 36 0;
#X connect 22 0 21 0;
#X connect 22 1 21 0;
#X connect 23 0 17 1;
#X connect 23 0 7 0;
#X connect 23 0 21 1;
#X connect 28 0 0 0;
#X connect 29 0 5 0;
#X connect 30 0 31 0;
#X connect 31 0 6 0;
#X connect 36 0 11 0;
#X connect 36 1 7 0;
#X connect 36 1 17 1;
#X connect 36 1 24 0;
#X connect 36 2 37 0;
#X connect 37 0 0 0;
#X connect 39 0 40 1;
#X connect 39 0 45 1;
#X connect 40 0 41 0;
#X connect 41 0 43 0;
#X connect 41 1 42 0;
#X connect 44 0 40 0;
#X connect 45 0 41 0;
#X connect 46 0 45 0;
#X connect 47 0 44 0;
#X connect 48 0 46 0;
#X connect 49 0 0 0;
