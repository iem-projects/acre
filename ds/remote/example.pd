#N canvas 268 58 766 674 10;
#X declare -path ../.. -lib zexy -lib iemlib1;
#X obj 22 166 nbx 5 14 -1e+37 1e+37 0 0 fadetime fadetime fadetime
0 -8 0 10 -260097 -1 -1 68 256;
#X obj 533 177 nbx 5 14 -1e+37 1e+37 0 0 mastervol mastervol mastervol
0 -8 0 10 -261234 -1 -1 0 256;
#X text 573 5 (c) GPL \, acre winfried ritsch;
#X obj 246 610 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 246 503 list prepend send;
#X obj 246 524 list trim;
#X msg 331 347 listen 0;
#X msg 244 347 listen 3301;
#X text 246 332 on;
#X obj 258 171 nbx 5 14 -1e+37 1e+37 0 0 /chan/2/vol /chan/2/vol /chan/2/vol
0 -8 0 10 -204786 -1 -1 0 256;
#X obj 259 140 nbx 5 14 -1e+37 1e+37 0 0 /chan/1/vol /chan/1/vol /chan/1/vol
0 -8 0 10 -204786 -1 -1 0 256;
#X obj 246 587 netsend -u;
#X obj 32 4 declare -path ../.. -lib zexy -lib iemlib1;
#X obj 244 67 ds/remote/ctl CON1;
#X obj 493 84 ds/remote/ctl CON2;
#X obj 21 61 ds/remote/ctl;
#X text 232 210 Activate parameter on remote connection CON1, f 31
;
#X text 476 206 Activate parameter on remote connection CON2, f 29
;
#X text 13 198 _DEFAULT_ connection is default off;
#X msg 227 563 disconnect \, connect 255.255.255.255 3301;
#X msg 15 277 \; /ds/remote/volume/on 1;
#X msg 15 308 \; /ds/remote/volume/on 0;
#X obj 23 131 nbx 5 14 -1e+37 1e+37 0 0 volume volume volume 0 -8 0
10 -261682 -1 -1 58 256;
#X obj 23 419 ds/remote/connection;
#X obj 16 239 ds/remote/par volume;
#X obj 235 264 ds/remote/par /chan/2/vol CON1;
#X obj 473 252 ds/remote/par mastervol CON2;
#X obj 16 218 ds/remote/par fadetime;
#X obj 235 241 ds/remote/par /chan/1/vol CON1;
#X text 26 400 default remote connection;
#X msg 561 327 listen 0;
#X msg 477 329 listen 3301;
#X text 472 297 listen to tcp;
#X text 475 312 on;
#X obj 483 362 netreceive 3301;
#X obj 515 386 print tcp-rec;
#X obj 502 456 list prepend send;
#X obj 502 477 list trim;
#X floatatom 590 363 5 0 0 0 - - -, f 5;
#X text 567 313 off;
#X text 339 328 off;
#X text 573 474 wait for a receive to send back;
#X obj 244 373 netreceive -u 0;
#X obj 330 612 print udp-back;
#X obj 244 418 mux 1;
#X obj 286 417 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X floatatom 21 358 5 0 0 0 - - -, f 5;
#X msg 21 378 volume \$1;
#X obj 246 478 ds/remote/connection CON1;
#X obj 501 432 ds/remote/connection CON2;
#X text 9 259 turn remote volume on/off;
#X text 81 127 send;
#X text 58 355 from remote \; -);
#X text 241 314 listen to udp optional;
#X text 244 546 distribute to others via broadcast;
#X text 302 418 use backchannel;
#X text 6 512 Note: Since only one socket per host \, receives UDP
we try to use broadcast for testing \, so we can open the example patch
twice and couple these with CON1, f 38;
#X text 6 581 Note: No backchannel on UDP !;
#X obj 511 600 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X text 529 525 distribute to others via broadcast;
#X msg 512 542 disconnect \, connect localhost 3301;
#X obj 511 577 netsend;
#X obj 595 602 print tcp-back;
#X obj 509 506 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X text 532 506 use backchannel;
#X obj 448 505 demux 1;
#X text 623 365 connections;
#X text 483 622 Note: On controller we use netsend \, on client we
can use the backchannel if we want to send back from master., f 34
;
#X obj 23 440 print to-remote;
#X text 11 457 Remote connections can use any uni- or bidirectional
commuication channel \, pd provides, f 32;
#X text 25 20 Examples to use remote control of parameter: default
connection or a connection name can be chosen. To test here UDP and
TCP is implemented using FUDI protocol.;
#X text 472 42 For testing open on two Pd instances;
#X connect 4 0 5 0;
#X connect 5 0 11 0;
#X connect 6 0 42 0;
#X connect 7 0 42 0;
#X connect 11 0 3 0;
#X connect 11 1 43 0;
#X connect 11 1 44 1;
#X connect 19 0 11 0;
#X connect 23 0 68 0;
#X connect 30 0 34 0;
#X connect 31 0 34 0;
#X connect 34 0 35 0;
#X connect 34 0 49 0;
#X connect 36 0 37 0;
#X connect 37 0 65 0;
#X connect 42 0 44 0;
#X connect 44 0 48 0;
#X connect 45 0 44 2;
#X connect 46 0 47 0;
#X connect 47 0 23 0;
#X connect 48 0 4 0;
#X connect 49 0 36 0;
#X connect 60 0 61 0;
#X connect 61 0 58 0;
#X connect 61 1 62 0;
#X connect 61 1 49 0;
#X connect 63 0 65 1;
#X connect 65 0 61 0;
#X connect 65 1 34 0;
